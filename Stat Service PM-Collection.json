{
	"info": {
		"_postman_id": "38f64232-f09f-480b-92c9-a07c7048a1dc",
		"name": "Stat Service Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23412761"
	},
	"item": [
		{
			"name": "POST Request 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"pm.test(\"Has response body\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Has 'uri' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('uri');\r",
							"    pm.expect(jsonData.uri, '\"app\" must be \"/events/1\"').to.eql(\"/events/1\");\r",
							"});\r",
							"pm.test(\"Has 'app' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('app');\r",
							"    pm.expect(jsonData.app, '\"id\" must be \"ewm-main-service\"').to.eql(\"ewm-main-service\");\r",
							"});\r",
							"pm.test(\"Has 'ip' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('ip');\r",
							"    pm.expect(jsonData.ip, '\"ip\" must be \"192.163.0.1\"').to.eql(\"192.163.0.1\");\r",
							"});\r",
							"pm.test(\"Has 'uri' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('timestamp');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"app\": \"ewm-main-service\",\r\n    \"uri\": \"/events/1\",\r\n    \"ip\": \"192.163.0.1\",\r\n    \"timestamp\": \"{{now}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/hit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hit"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Requests Non-Unique",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"pm.test(\"Has response body\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Has 'uri' field\", function () {\r",
							"    var jsonData = pm.response.json()[0];\r",
							"    pm.expect(jsonData).to.have.property('uri');\r",
							"    pm.expect(jsonData.uri, '\"uri\" must be \"/events/1\"').to.eql(\"/events/1\");\r",
							"});\r",
							"pm.test(\"Has 'app' field\", function () {\r",
							"    var jsonData = pm.response.json()[0];\r",
							"    pm.expect(jsonData).to.have.property('app');\r",
							"    pm.expect(jsonData.app, '\"app\" must be \"ewm-main-service\"').to.eql(\"ewm-main-service\");\r",
							"});\r",
							"pm.test(\"Has 'hit' field\", function () {\r",
							"    var jsonData = pm.response.json()[0];\r",
							"    pm.expect(jsonData).to.have.property('hit');\r",
							"    pm.expect(jsonData.hit, '\"hit\" must be \"1\"').to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stats?start={{start}}&end={{end}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stats"
					],
					"query": [
						{
							"key": "start",
							"value": "{{start}}"
						},
						{
							"key": "end",
							"value": "{{end}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Request 2 Same IP",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"pm.test(\"Has response body\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Has 'uri' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('uri');\r",
							"    pm.expect(jsonData.uri, '\"app\" must be \"/events/1\"').to.eql(\"/events/1\");\r",
							"});\r",
							"pm.test(\"Has 'app' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('app');\r",
							"    pm.expect(jsonData.app, '\"id\" must be \"ewm-main-service\"').to.eql(\"ewm-main-service\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"app\": \"ewm-main-service\",\r\n    \"uri\": \"/events/1\",\r\n    \"ip\": \"192.163.0.1\",\r\n    \"timestamp\": \"{{now}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/hit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hit"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Requests Unique",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"pm.test(\"Has response body\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Has 'uri' field\", function () {\r",
							"    var jsonData = pm.response.json()[0];\r",
							"    pm.expect(jsonData).to.have.property('uri');\r",
							"    pm.expect(jsonData.uri, '\"uri\" must be \"/events/1\"').to.eql('/events/1');\r",
							"});\r",
							"pm.test(\"Has 'app' field\", function () {\r",
							"    var jsonData = pm.response.json()[0];\r",
							"    pm.expect(jsonData).to.have.property('app');\r",
							"    pm.expect(jsonData.app, '\"app\" must be \"ewm-main-service\"').to.eql('ewm-main-service');\r",
							"});\r",
							"pm.test(\"Has 'hit' field\", function () {\r",
							"    var jsonData = pm.response.json()[0];\r",
							"    pm.expect(jsonData).to.have.property('hit');\r",
							"    pm.expect(jsonData.hit, '\"hit\" must be \"1\"').to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stats?start={{start}}&end={{end}}&unique=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stats"
					],
					"query": [
						{
							"key": "start",
							"value": "{{start}}"
						},
						{
							"key": "end",
							"value": "{{end}}"
						},
						{
							"key": "unique",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Request 3 Other Uri",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"pm.test(\"Has response body\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Has 'uri' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('uri');\r",
							"    pm.expect(jsonData.uri, '\"app\" must be \"/events/2\"').to.eql(\"/events/2\");\r",
							"});\r",
							"pm.test(\"Has 'app' field\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('app');\r",
							"    pm.expect(jsonData.app, '\"id\" must be \"ewm-main-service\"').to.eql(\"ewm-main-service\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"app\": \"ewm-main-service\",\r\n    \"uri\": \"/events/2\",\r\n    \"ip\": \"192.163.0.1\",\r\n    \"timestamp\": \"{{now}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/hit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hit"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Requests Spec Uri",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"pm.test(\"Has response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Has one uri\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.length(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stats?start={{start}}&end={{end}}&uris=/events/2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stats"
					],
					"query": [
						{
							"key": "start",
							"value": "{{start}}"
						},
						{
							"key": "end",
							"value": "{{end}}"
						},
						{
							"key": "uris",
							"value": "/events/2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Requests All Uri",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"pm.test(\"Has response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Has two uri\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.length(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/stats?start={{start}}&end={{end}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stats"
					],
					"query": [
						{
							"key": "start",
							"value": "{{start}}"
						},
						{
							"key": "end",
							"value": "{{end}}"
						},
						{
							"key": "uris",
							"value": "/events/2",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var moment = require('moment');",
					"",
					"var start = moment().add(-1, 'd');",
					"var end = moment().add(1, 'd')",
					"pm.environment.set('start', start.format('YYYY-MM-DD HH:mm:ss'));",
					"pm.environment.set('end', end.format('YYYY-MM-DD HH:mm:ss'));",
					"pm.environment.set('now', moment().format('YYYY-MM-DD HH:mm:ss'));"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:9090",
			"type": "string"
		},
		{
			"key": "end",
			"value": "",
			"type": "string"
		},
		{
			"key": "start",
			"value": "",
			"type": "string"
		}
	]
}